plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.file.search'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot JPA, Web, Security
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'

	// Spring Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// SpringDoc OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // Utility Libraries
    implementation 'com.aventrix.jnanoid:jnanoid:2.0.0'

	// Kafka
    implementation 'org.springframework.kafka:spring-kafka:3.2.4'

    // MinIO
    implementation 'io.minio:minio:8.4.2'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Elasticsearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.data:spring-data-elasticsearch:5.3.1'

	// Elasticsearch 클라이언트 의존성 
    implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.10.0'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// QueryDSL
    implementation 'com.querydsl:querydsl-apt:5.0.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'com.querydsl:querydsl-core:5.0.0'

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

    annotationProcessor "jakarta.annotation:jakarta.annotation-api" 
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// Postgresql Array
	implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.9.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 빌드 옵션 설정
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}
